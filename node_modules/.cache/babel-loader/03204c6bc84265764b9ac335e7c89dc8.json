{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mabra\\\\3D Objects\\\\Current Theme\\\\src\\\\components\\\\Dashboard\\\\InputWebsite.js\";\nimport React, { useState } from 'react';\nimport { Container, TextField, FormGroup, FormControlLabel, Checkbox, Button } from '@material-ui/core';\nexport default function InputWebsite() {\n  const [data, setData] = useState({\n    website_url: \"\",\n    browser: {\n      splash: true,\n      chrome: false,\n      firefox: false\n    },\n    resolution: {\n      \"1920x1080\": true\n    },\n    requestTime: Date()\n  }); //Add resolution\n\n  const handleChange = name => event => {\n    setData({ ...data,\n      browser: { ...data.browser,\n        [name]: event.target.checked\n      }\n    });\n  };\n\n  const handleButtonPress = () => {\n    setData({ ...data,\n      requestTime: Date()\n    });\n    console.log(data);\n\n    (async () => {\n      const response = await fetch('http://localhost:5000/sendScrape', {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n\n      if (response.ok) {\n        console.log('Data sent to flask! ' + JSON.stringify(data));\n        setData({ ...data,\n          browser: {\n            splash: true,\n            chrome: false,\n            firefox: false\n          },\n          resolution: {\n            \"1920x1080\": true\n          }\n        });\n      }\n    })();\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Add Site ...\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: '300px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"Website Name\",\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: e => {\n      setData({ ...data,\n        website_url: e.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(FormGroup, {\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: data.browser.splash,\n      onChange: handleChange('splash'),\n      value: \"splash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }),\n    label: \"Splash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: data.browser.chrome,\n      onChange: handleChange('chrome'),\n      value: \"chrome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }),\n    label: \"Chrome\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    onClick: handleButtonPress,\n    style: {\n      marginTop: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Submit\")));\n}","map":{"version":3,"sources":["C:/Users/mabra/3D Objects/Current Theme/src/components/Dashboard/InputWebsite.js"],"names":["React","useState","Container","TextField","FormGroup","FormControlLabel","Checkbox","Button","InputWebsite","data","setData","website_url","browser","splash","chrome","firefox","resolution","requestTime","Date","handleChange","name","event","target","checked","handleButtonPress","console","log","response","fetch","method","headers","body","JSON","stringify","ok","width","e","value","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Container, TextField, FormGroup, FormControlLabel, Checkbox, Button } from '@material-ui/core'\n\nexport default function InputWebsite() {\n    const [data, setData] = useState({\n        website_url: \"\",\n        browser: {\n            splash: true,\n            chrome: false,\n            firefox: false\n        },\n        resolution: {\n            \"1920x1080\": true\n        },\n        requestTime: Date(),\n    });\n\n    //Add resolution\n    \n    const handleChange = name => event => {\n        setData({\n            ...data,\n            browser: {\n                ...data.browser,\n                [name]: event.target.checked\n            }\n        });\n    };\n\n    const handleButtonPress = () => {\n\n        setData({\n            ...data,\n            requestTime: Date()\n        })\n\n        console.log(data);\n        (async () => {\n            const response = await fetch('http://localhost:5000/sendScrape', {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n            });\n\n            if (response.ok) {\n                console.log('Data sent to flask! '+JSON.stringify(data));\n                setData({\n                    ...data,\n                    browser: {\n                        splash: true,\n                        chrome: false,\n                        firefox: false\n                    },\n                    resolution: {\n                        \"1920x1080\": true\n                    }\n                });\n            }\n        })();\n    }\n\n    return (\n        <Container>\n            <h2>Add Site ...</h2>\n            <form>\n                <div style={{width: '300px'}}>\n                    <TextField id='outlined-basic' label='Website Name' variant='outlined' fullWidth onChange={(e) => {setData({ ...data, website_url: e.target.value})}}/>\n                </div>\n                <br/>\n                <FormGroup row>\n                    <FormControlLabel\n                        control={<Checkbox checked={data.browser.splash} onChange={handleChange('splash')} value='splash'/>}\n                        label='Splash'\n                    />\n                    <FormControlLabel\n                        control={<Checkbox checked={data.browser.chrome} onChange={handleChange('chrome')} value='chrome'/>}\n                        label='Chrome'\n                    />\n                    {/* <FormControlLabel\n                        control={<Checkbox checked={data.browser.firefox} onChange={handleChange('firefox')} value='firefox'/>}\n                        label='Firefox'\n                    /> */}\n                </FormGroup>\n                <br/>\n                <Button variant='contained' onClick={handleButtonPress} style={{marginTop: '20px'}}>Submit</Button>\n            </form>\n        </Container>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}