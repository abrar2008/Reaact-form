{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mabra\\\\3D Objects\\\\Current Theme\\\\src\\\\components\\\\Results.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Paper, Container, FormControl, InputLabel, Select, MenuItem, Button, TableHead, TableRow, TableCell, TableContainer, Tab, Table, TableBody } from '@material-ui/core';\nexport default function Results() {\n  const [websiteList, setWebsiteList] = useState({});\n  const [selection, setSelection] = useState({\n    website: '',\n    processId: '',\n    analysis: 'seo'\n  });\n  const [daData, setDaData] = useState({\n    showSeo: false,\n    showAxe: false,\n    showAxeRaw: false,\n    data: {}\n  });\n  useEffect(() => {\n    fetch(\"http://localhost:5000/getWebsiteList\").then(response => response.json().then(data => {\n      setWebsiteList(data);\n    }));\n  }, []);\n\n  const handleSelectionChange = name => event => {\n    setSelection({ ...selection,\n      [name]: event.target.value\n    });\n  };\n\n  const handleButtonPress = () => {\n    if (selection.website !== '') {\n      if (selection.processId !== '') {\n        if (selection.analysis === 'seo') {\n          fetch('http://localhost:5000/getReportDa?site=' + selection.website + '&process_id=' + selection.processId).then(response => response.json().then(data => {\n            setDaData({\n              showSeo: true,\n              showAxe: false,\n              showAxeRaw: false,\n              data: data\n            });\n          }));\n        } else if (selection.analysis === 'axe') {\n          fetch('http://localhost:5000/getReportAxe?site=' + selection.website + '&process_id=' + selection.processId).then(response => response.json().then(data => {\n            setDaData({\n              showSeo: false,\n              showAxe: true,\n              showAxeRaw: false,\n              data: data\n            });\n          }));\n        } else if (selection.analysis === 'axe_raw') {\n          fetch('http://localhost:5000/getReportAxeRaw?site=' + selection.website + '&process_id=' + selection.processId).then(response => response.json().then(data => {\n            setDaData({\n              showSeo: false,\n              showAxe: false,\n              showAxeRaw: true,\n              data: data\n            });\n            console.log(data);\n          }));\n        }\n      }\n    }\n  };\n\n  const handleDownloadButton = () => {\n    if (selection.website !== '') {\n      if (selection.processId !== '') {\n        fetch('http://localhost:5000/getAxeCsv?site=' + selection.website + '&process_id=' + selection.processId).then(response => response.blob().then(blob => {\n          const url = URL.createObjectURL(blob);\n          const a = document.createElement('a');\n          a.href = url;\n          a.download = \"main-table.csv\";\n          a.click();\n        }));\n      }\n    }\n  };\n\n  return React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 8,\n    lg: 9,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    style: {\n      padding: 30,\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Results\"), React.createElement(FormControl, {\n    style: {\n      width: 200\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Select Website\"), React.createElement(Select, {\n    onChange: handleSelectionChange('website'),\n    autoWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, Object.keys(websiteList).map(key => React.createElement(MenuItem, {\n    value: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, key)))), React.createElement(FormControl, {\n    style: {\n      width: 200\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Select ProcessId\"), React.createElement(Select, {\n    onChange: handleSelectionChange('processId'),\n    autoWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, selection.website !== '' ? websiteList[selection.website].map(val => React.createElement(MenuItem, {\n    value: val,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, val)) : React.createElement(MenuItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Select a website first!\"))), React.createElement(FormControl, {\n    style: {\n      width: 200\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Select Analysis\"), React.createElement(Select, {\n    onChange: handleSelectionChange('analysis'),\n    autoWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: 'seo',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"SEO (Script 1)\"), React.createElement(MenuItem, {\n    value: 'axe',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Violations (Script 2)\"), React.createElement(MenuItem, {\n    value: 'axe_raw',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Main Table\"))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    onClick: handleButtonPress,\n    style: {\n      marginTop: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Fetch Results\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), daData.showAxeRaw ? React.createElement(Button, {\n    variant: \"contained\",\n    onClick: handleDownloadButton,\n    style: {\n      marginTop: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Download CSV\") : React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })))), daData.showSeo ? React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, Object.keys(daData.data).map(title => React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    md: 3,\n    lg: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, title), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), React.createElement(TableContainer, {\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, daData.data[title].map(field => React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, field[0]), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, field[1])))))))) : React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), daData.showAxe ? React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, Object.keys(daData.data).map(title => React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, title), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), React.createElement(TableContainer, {\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, title)), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"Times it asppeared\")), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"AVG/Page\"))), daData.data[title].map(field => React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, field[0]), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, field[1]), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, field[2])))))))) : React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }), daData.showAxeRaw ? React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    component: Paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    component: \"th\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \"S.No.\")), React.createElement(TableCell, {\n    component: \"th\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"url\")), React.createElement(TableCell, {\n    component: \"th\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"category\")), React.createElement(TableCell, {\n    component: \"th\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"priority\")), React.createElement(TableCell, {\n    component: \"th\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \"violation_help\")), React.createElement(TableCell, {\n    component: \"th\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \"description\")), React.createElement(TableCell, {\n    component: \"th\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"element_location\")), React.createElement(TableCell, {\n    component: \"th\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"element\")))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, Object.keys(daData.data).map(row => React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, row), daData.data[row].map(item => React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, item)))))))) : React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:/Users/mabra/3D Objects/Current Theme/src/components/Results.js"],"names":["React","useState","useEffect","Grid","Paper","Container","FormControl","InputLabel","Select","MenuItem","Button","TableHead","TableRow","TableCell","TableContainer","Tab","Table","TableBody","Results","websiteList","setWebsiteList","selection","setSelection","website","processId","analysis","daData","setDaData","showSeo","showAxe","showAxeRaw","data","fetch","then","response","json","handleSelectionChange","name","event","target","value","handleButtonPress","console","log","handleDownloadButton","blob","url","URL","createObjectURL","a","document","createElement","href","download","click","padding","display","overflow","flexDirection","width","Object","keys","map","key","val","marginTop","title","field","row","item"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Grid, Paper, Container, FormControl, InputLabel, Select, MenuItem, Button, TableHead, TableRow, TableCell, TableContainer, Tab, Table, TableBody} from '@material-ui/core';\n\nexport default function Results() {\n\n    const [websiteList, setWebsiteList] = useState({});\n    const [selection, setSelection] = useState({\n        website: '',\n        processId: '',\n        analysis: 'seo'\n    });\n    const [daData, setDaData] = useState({\n        showSeo: false,\n        showAxe: false,\n        showAxeRaw: false,\n        data: {}\n    });\n\n    useEffect(() => {\n        fetch(\"http://localhost:5000/getWebsiteList\").then(\n            response => response.json().then(\n                data => {\n                    setWebsiteList(data);\n                }\n            )\n        );\n    }, []);\n\n    const handleSelectionChange = name => event => {\n        setSelection({\n            ...selection,\n            [name]: event.target.value\n        })\n    }\n\n    const handleButtonPress = () => {\n        if (selection.website !== '') {\n            if (selection.processId !== '') {\n                if (selection.analysis === 'seo') {\n                    fetch('http://localhost:5000/getReportDa?site='+selection.website+'&process_id='+selection.processId).then(\n                        response => response.json().then(\n                            data => {\n                                setDaData({\n                                    showSeo: true,\n                                    showAxe: false,\n                                    showAxeRaw: false,\n                                    data: data\n                                });\n                            }\n                        )\n                    )\n                } else if (selection.analysis === 'axe') {\n                    fetch('http://localhost:5000/getReportAxe?site='+selection.website+'&process_id='+selection.processId).then(\n                        response => response.json().then(\n                            data => {\n                                setDaData({\n                                    showSeo: false,\n                                    showAxe: true,\n                                    showAxeRaw: false,\n                                    data: data\n                                });\n                            }\n                        )\n                    )\n                } else if (selection.analysis === 'axe_raw') {\n                    fetch('http://localhost:5000/getReportAxeRaw?site='+selection.website+'&process_id='+selection.processId).then(\n                        response => response.json().then(\n                            data => {\n                                setDaData({\n                                    showSeo: false,\n                                    showAxe: false,\n                                    showAxeRaw: true,\n                                    data: data\n                                });\n                                console.log(data);\n                            }\n                        )\n                    )\n                }\n            }\n        }\n    }\n\n    const handleDownloadButton = () => {\n        if (selection.website !== '') {\n            if (selection.processId !== '') {\n                fetch('http://localhost:5000/getAxeCsv?site='+selection.website+'&process_id='+selection.processId).then(\n                    response => response.blob().then((blob) => {\n                        const url = URL.createObjectURL(blob);\n                        const a = document.createElement('a');\n                        a.href = url;\n                        a.download = \"main-table.csv\";\n                        a.click(); \n                    })\n                )\n            }\n        }\n    }\n\n    return (\n        <Grid container spacing={3}>\n            <Grid item xs={12} md={8} lg={9}>\n                <Paper style={{\n                      padding: 30,\n                      display: 'flex',\n                      overflow: 'auto',\n                      flexDirection: 'column',\n                  }}>\n                    <Container>\n                        <h2>Results</h2>\n                        <FormControl style={{width: 200}}>\n                            <InputLabel>Select Website</InputLabel>\n                            <Select onChange={handleSelectionChange('website')} autoWidth>\n                                {Object.keys(websiteList).map((key) => (\n                                    <MenuItem value={key}>\n                                        {key}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                        \n                        <FormControl style={{width: 200}}>\n                            <InputLabel>Select ProcessId</InputLabel>\n                            <Select onChange={handleSelectionChange('processId')} autoWidth>\n                                {selection.website !== '' ? websiteList[selection.website].map((val) => (\n                                    <MenuItem value={val}>\n                                        {val}\n                                    </MenuItem>\n                                )) : <MenuItem>Select a website first!</MenuItem>}\n                            </Select>\n                        </FormControl>\n\n                        <FormControl style={{width: 200}}>\n                            <InputLabel>Select Analysis</InputLabel>\n                            <Select onChange={handleSelectionChange('analysis')} autoWidth>\n                                <MenuItem value={'seo'}>SEO (Script 1)</MenuItem>\n                                <MenuItem value={'axe'}>Violations (Script 2)</MenuItem>\n                                <MenuItem value={'axe_raw'}>Main Table</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <br/>\n                        <Button variant='contained' onClick={handleButtonPress} style={{marginTop: '20px'}}>Fetch Results</Button>\n                        <br/>\n                        {daData.showAxeRaw ? <Button variant='contained' onClick={handleDownloadButton} style={{marginTop: '20px'}}>Download CSV</Button> : <Container></Container>}\n                    </Container>\n                </Paper>\n            </Grid>\n            {daData.showSeo ? \n            <Grid container spacing={3}>\n                {Object.keys(daData.data).map((title) => (\n                    <Grid item xs={4} md={3} lg={3}>\n                        <h2>{title}</h2>\n                        <br/>\n                        <TableContainer component={Paper}>\n                            <Table>\n                                {daData.data[title].map((field) => (\n                                    <TableBody>\n                                        <TableCell>{field[0]}</TableCell>\n                                        <TableCell>{field[1]}</TableCell>\n                                    </TableBody>\n                                ))}\n                            </Table>\n                        </TableContainer>\n                    </Grid>\n                ))}\n            </Grid>\n            : <Container></Container>}\n            {daData.showAxe ?\n            <Grid container spacing={3}>\n                {Object.keys(daData.data).map((title) => (\n                    <Grid item>\n                        <h2>{title}</h2>\n                        <br/>\n                        <TableContainer component={Paper}>\n                            <Table>\n                                <TableHead>\n                                    <TableCell><b>{title}</b></TableCell>\n                                    <TableCell><b>Times it asppeared</b></TableCell>\n                                    <TableCell><b>AVG/Page</b></TableCell>\n                                </TableHead>\n                                {daData.data[title].map((field) => (\n                                    <TableBody>\n                                        <TableCell>{field[0]}</TableCell>\n                                        <TableCell>{field[1]}</TableCell>\n                                        <TableCell>{field[2]}</TableCell>\n                                    </TableBody>\n                                ))}\n                            </Table>\n                        </TableContainer>\n                    </Grid>\n                ))}\n            </Grid>\n            : <Container></Container>}\n            {daData.showAxeRaw ?\n            <Grid container spacing={3}>\n                <TableContainer component={Paper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell component='th'><b>S.No.</b></TableCell>\n                                <TableCell component='th'><b>url</b></TableCell>\n                                <TableCell component='th'><b>category</b></TableCell>\n                                <TableCell component='th'><b>priority</b></TableCell>\n                                <TableCell component='th'><b>violation_help</b></TableCell>\n                                <TableCell component='th'><b>description</b></TableCell>\n                                <TableCell component='th'><b>element_location</b></TableCell>\n                                <TableCell component='th'><b>element</b></TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {Object.keys(daData.data).map((row) => (\n                                <TableRow>\n                                    <TableCell>{row}</TableCell>\n                                    {daData.data[row].map((item) => (\n                                        <TableCell>{item}</TableCell>\n                                    ))}\n                                </TableRow> \n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Grid>\n            : <Container></Container>}\n        </Grid>\n    )\n}"]},"metadata":{},"sourceType":"module"}